{"version":3,"sources":["./src/app/auth/register/register.component.html","./src/app/components/homeComponent/home.component.html","./src/app/services/alert.service.ts","./src/app/auth/auth-routing.module.ts","./src/app/helpers/index.ts","./src/app/components/alertComponent/alert.component.ts","./src/environments/environment.ts","./src/app/users/users-routing.module.ts","./src/app/components/homeComponent/index.ts","./src/app/shared/spinner.component.ts.SpinnerComponent.html","./src/app/components/navbarComponent/navbar.component.ts","./src/app/components/homeComponent/home.component.ts","./src/app/shared/sharedModule.module.ts","./src/app/helpers/mustMatch.ts","./src/app/app.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/login/login.component.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/helpers/error.interceptor.ts","./src/app/components/navbarComponent/navbar.component.html","./src/app/users/users.component.html","./src/app/services/auth.service.ts","./src/app/components/alertComponent/alert.component.html","./src/app/users/users.component.ts","./src/app/shared/spinner.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/users/users.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n<div fxLayout=\"row\" fxLayout.md=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"  fxLayoutGap=\"5%\" fxLayoutAlign=\"space-around center\">\n\n  \n    <mat-card fxFlex='50'  class=\"register-matcard\">\n      <mat-progress-bar mode=\"query\" *ngIf=\"loading\"></mat-progress-bar>\n  \n      <br>\n              \n      \n  \n      <h3 class=\"title-center\"> Sign up</h3>\n  \n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n  \n        <mat-form-field  appearance=\"outline\" class=\"full-width\">\n            <mat-label>Full Name</mat-label>\n          <input matInput placeholder=\" Full Name\" [formControl]=\"fullname\" required>\n          <mat-error *ngIf=\"fullname.hasError('required')\"> full name is required</mat-error>\n          <mat-error *ngIf=\"fullname.hasError('minlength') && !fullname.hasError('required')\">\n            fullname Must be at least 6 letters</mat-error>\n          <mat-error *ngIf=\"fullname.hasError('maxlength')\">\n            fullname with more than 40 characters.\n          </mat-error>\n        </mat-form-field>\n  \n        <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Email</mat-label>\n          <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\n          <mat-error *ngIf=\"email.hasError('required')\"> Email is Required</mat-error>\n          <mat-error *ngIf=\"!email.hasError('required') && email.hasError('email')\"> A Valid Email is Required</mat-error>\n  \n        </mat-form-field>\n  \n        <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Password</mat-label>\n          <input matInput placeholder=\"Enter your Password\" [formControl]=\"password\" [type]=\"hide ? 'text' : 'password'\">\n          <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\n  \n          <mat-error *ngIf=\"password.hasError('required')\">\n            Password Required\n          </mat-error>\n          <mat-error *ngIf=\"password.hasError('minlength') && !password.hasError('required')\">\n            Password Must be at least 6 letters</mat-error>\n          <mat-error *ngIf=\"password.hasError('maxlength') && !password.hasError('required')\">\n            Password with more than 24 characters.\n          </mat-error>\n        </mat-form-field>\n  \n  \n        <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>verify Password</mat-label>\n          <input matInput placeholder=\"verify your Password\" [formControl]=\"verifyPassword\"\n            [type]=\"hide ? 'text' : 'password'\">\n          <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\n          <mat-error *ngIf=\"verifyPassword.hasError('required')\">\n            verify Password Required\n          </mat-error>\n  \n          <mat-error *ngIf=\"verifyPassword.hasError('mustMatch') && !verifyPassword.hasError('required')\">\n            Password Do not Match\n          </mat-error>\n        </mat-form-field>\n  \n        <!-- put buttons here -->\n     \n      \n        <div class=\"example-button-row\">\n          <button class=\"full-width\" type=\"submit\" mat-raised-button color=\"primary\"\n            [disabled]=\"loading\">Register</button>\n        </div>\n  \n  \n  \n  \n      </form>\n      <br>\n        Login if you are already a registered \n        <br>\n      <a mat-raised-button color=\"primary\" class=\"primary\" routerLink=\"/auth/login\" >login</a>\n        <!-- <button color=\"primary\" class=\"full-width\" type=\"submit\" mat-raised-button color=\"primary\"\n        [disabled]=\"loading\">Login</button>\n     -->\n     <br>\n    </mat-card>\n   \n  </div>","<h1>Home Page</h1>\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterNavigationChange = false;\n\n    constructor(private router: Router) {\n        // clear alert message on route change\n        router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterNavigationChange) {\n                    // only keep for a single location change\n                    this.keepAfterNavigationChange = false;\n                } else {\n                    // clear alert\n                    this.subject.next();\n                }\n            }\n        });\n    }\n\n    getMessage(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    success(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n    clear() {\n        // clear alerts\n        this.subject.next();\n    }\n\n    \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [{\n  path: 'auth',\n  children: [{\n    path: '',\n    redirectTo: '/auth/login',\n    pathMatch: 'full'\n  }, {\n    path: 'login',\n    component: LoginComponent\n  }, {\n    path: 'register',\n    component: RegisterComponent\n  }\n\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","export * from './error.interceptor';\r\nexport * from './jwt.interceptor';\r\nexport * from './mustMatch';\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AlertService } from '../../services/alert.service';\n\n@Component({\n    // tslint:disable-next-line:component-selector\n    selector: 'alert',\n    templateUrl: 'alert.component.html',\n    styleUrls: ['./alert.component.css']\n})\n\nexport class AlertComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    message: any;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.subscription = this.alertService.getMessage().subscribe(message => {\n            this.message = message;\n        });\n    }\n    clearAlert(){\n        this.alertService.clear()\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [{ path: '', component: UsersComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","export * from './home.component';\r\n","<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\n        <div class=\"spinner\">\n          <div class=\"double-bounce1\"></div>\n          <div class=\"double-bounce2\"></div>\n        </div>\n    </div>","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthService } from './../../services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n// import { flattenStyles } from '@angular/platform-browser/src/dom/dom_renderer';\nimport { AlertService } from './../../services/alert.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent  {\n  \n  @Input() currentUser: any = {};\n  @Input() title: any = \"\";\n\n\n  // currentUser: User;\n  // currentUserSubscription: Subscription;\n\n\n  constructor(private authenticationService: AuthService,\n    private router: Router,private AlertService:AlertService) {\n   \n  }\n \n  \n\n  onLogout() {\n    this.authenticationService.logout();\n    this.AlertService.success(`successfully logout`);\n    setTimeout(()=>{\n      this.AlertService.clear();            \n      \n    },3000);\n\n  this.router.navigate(['']);\n   \n  \n  }\n  // onProfile(){\n  //   this.router.navigate(['/auth/profile']);\n  \n  // }\n  \n  // onAdmin(){\n  //   this.router.navigate(['/admin/users']);\n  \n  // }\n  \n  // ngOnInit() {\n    \n  //   const timer = JSON.parse(localStorage.getItem('timer'));\n  //   if (timer && (Date.now() > timer)) {\n  //     this.authenticationService.logout();\n  //     this.router.navigate(['/login']);\n  //   }  \n\n    \n  // }\n  // ngOnDestroy() {\n  //   // this.currentUserSubscription.unsubscribe();\n   \n  // }\n\n}\n","import { Component, OnInit , OnDestroy  } from '@angular/core';\n// import { User } from '../../_models';\n// import { Subscription } from 'rxjs';\n// // import { first } from 'rxjs/operators';\n// import { AuthenticationService, UserService } from '../../_services';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent  {\n  // currentUser: User;\n  // currentUserSubscription: Subscription;\n  // // users: User[] = [];\n\n\n  constructor( ) {\n     \n\n\n    }\n\n\n\n// deleteUser(id: number) {\n//   this.userService.delete(id).pipe(first()).subscribe(() => {\n//       this.loadAllUsers( );\n//   });\n// }\n// private loadAllUsers() {\n//   this.userService.getAll().pipe(first()).subscribe(users => {\n//       this.users = users;\n//   });\n// }\n}\n","import { NgModule } from '@angular/core';\r\n\r\n  import {MatSidenavModule} from '@angular/material/sidenav';\r\n  import { MatButtonModule} from '@angular/material/button';\r\n  import {MatGridListModule} from '@angular/material/grid-list';\r\n  import {MatSelectModule} from '@angular/material/select';\r\n  import { MatDividerModule} from '@angular/material/divider';\r\n  import {MatMenuModule} from '@angular/material/menu';\r\n  \r\n\r\n  import {MatPaginatorModule} from '@angular/material/paginator';\r\n  import { MatSortModule} from '@angular/material/sort';\r\n  import {MatTableModule} from '@angular/material/table';\r\n  import {MatDatepickerModule} from '@angular/material/datepicker';\r\n  import { MatNativeDateModule} from '@angular/material/core';\r\n  import {MatExpansionModule} from '@angular/material/expansion';\r\n  import {MatChipsModule} from '@angular/material/chips';\r\n  import { MatIconModule} from '@angular/material/icon';\r\n  import {MatFormFieldModule} from '@angular/material/form-field';\r\n  import {MatCardModule} from '@angular/material/card';\r\n  import { MatListModule} from '@angular/material/list';\r\n  import {MatProgressBarModule} from '@angular/material/progress-bar';\r\n  \r\n\r\n  import {MatInputModule} from '@angular/material/input';\r\n  \r\n  import {MatToolbarModule} from '@angular/material/toolbar';\r\n  \r\n  //import {ButtonModule,AccordionModule} from 'primeng';\r\n import {AccordionModule} from 'primeng/accordion';     //accordion and accordion tab\r\n import {ButtonModule} from 'primeng/button';     //accordion and accordion tab\r\n import {InputTextModule} from 'primeng/inputtext';\r\n import {TableModule} from 'primeng/table';\r\n import {PaginatorModule} from 'primeng/paginator';\r\n import {DialogModule} from 'primeng/dialog'\r\n //import {MenuItem} from 'primeng/api';                 //api\r\n \r\n  \r\n  import { FlexLayoutModule } from '@angular/flex-layout';\r\n  import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n  //import { SearchAndPaginationModule } from '../seachAndPagination/SearchAndPagination.module';\r\n\r\n  @NgModule({\r\n      imports: [\r\n        DialogModule,PaginatorModule,TableModule,ButtonModule,AccordionModule,InputTextModule,\r\n        MatToolbarModule, MatMenuModule,\r\n        MatButtonModule, MatIconModule, MatInputModule,\r\n        MatSidenavModule, MatGridListModule,\r\n        MatSelectModule, MatDividerModule,MatChipsModule,\r\n         MatFormFieldModule, MatCardModule, MatListModule, MatProgressBarModule,\r\n         FlexLayoutModule,MatChipsModule,\r\n         FormsModule,ReactiveFormsModule,MatPaginatorModule,\r\n  \r\n         MatSortModule,MatTableModule,MatDatepickerModule,MatNativeDateModule,MatExpansionModule  \r\n  \r\n        ],\r\n      exports: [\r\n        DialogModule,PaginatorModule,TableModule,ButtonModule,AccordionModule,InputTextModule,\r\n        MatToolbarModule, MatMenuModule,\r\n        MatButtonModule, MatInputModule, MatIconModule,\r\n         MatSidenavModule, MatGridListModule,MatChipsModule,\r\n         MatSelectModule, MatDividerModule,MatChipsModule,\r\n         MatFormFieldModule, MatCardModule, MatListModule, \r\n         MatProgressBarModule,FlexLayoutModule,FormsModule,\r\n         ReactiveFormsModule,MatPaginatorModule,\r\n         MatSortModule,MatTableModule,MatDatepickerModule,MatNativeDateModule  ,MatExpansionModule  \r\n      ],\r\n      declarations: []\r\n  })\r\nexport class SharedModule {\r\n\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   title = 'front-end';\n// }\n// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   title = 'ClientSide';\n\n// }\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from './services/auth.service';\nimport { User } from './interfaces/user';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from './services/alert.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class  AppComponent implements OnInit, OnDestroy {\n     currentUser: User;\n   \ncurrentUserSubscription: Subscription;\n\n    \n    title = 'Home';\n    constructor( \n        private router: Router,private alertService :AlertService,\n        private authenticationService: AuthService\n    ) {\n       \n    }\n   \n    ngOnInit(): void {\n        this.currentUserSubscription= this.authenticationService.currentUser.subscribe(x =>{\n            \n            this.currentUser = x;\n           \n        } );\n        const timer = JSON.parse(localStorage.getItem('timer'));\n        if (timer && (Date.now() > timer)) {\n          this.authenticationService.logout();\n          this.alertService.success(`You have be sign out`);\n  \n          setTimeout(()=>{\n            this.alertService.clear();            \n            \n          },3000);\n          \n          this.router.navigate(['/auth/login']);\n        }  \n    \n    }\n   \n\n    ngOnDestroy(): void {\n        if (this.currentUserSubscription) {\n    \n        \n        this.currentUserSubscription.unsubscribe();\n     }\n    }\n   \n    \n    \n    logout() {\n        this.authenticationService.logout();\n        this.alertService.success(`successfully logout`);\n        setTimeout(()=>{\n            this.alertService.clear();            \n            \n          },3000);\n  \n        \n      this.router.navigate(['/auth/login']);\n    \n   \n         }\n}\n","<div fxLayout=\"row\" fxLayout.md=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"10%\" fxLayoutAlign=\"space-around center\">\n\n\n    <mat-card fxFlex='50' class=\"login-matcard\">\n  \n  <br>\n  \n      <mat-progress-bar mode=\"query\" *ngIf=\"loading\"></mat-progress-bar>\n      \n  \n      <h3 class=\"title-center\"> Sign In</h3>\n  \n  \n      <form [formGroup]=\"loginForm\" class=\"lgForm\" (ngSubmit)=\"onSubmit()\">\n  \n        \n      \n  \n        <mat-form-field  appearance=\"outline\" class=\"full-width\">\n            <mat-label>Email</mat-label>\n          <input matInput placeholder=\"Email\" [formControl]=\"email\" required>\n          <mat-error *ngIf=\"email.hasError('required')\"> Email is Required</mat-error>\n          \n          <mat-error *ngIf=\" !email.hasError('required') && email.hasError('email')\"> Must be an email</mat-error>\n        </mat-form-field>\n  \n  \n        <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>password</mat-label>\n          <input matInput placeholder=\" Password\" [formControl]=\"password\" [type]=\"hide ? 'text' : 'password'\">\n          <mat-icon matSuffix (click)=\"hide = !hide\" color='primary'>{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\n          <mat-error *ngIf=\"password.hasError('required')\">Password is Required</mat-error>\n        </mat-form-field>\n  \n  \n  \n        <!-- put buttons here -->\n        <div class=\"example-button-row\">\n          <button color=\"primary\" class=\"full-width\" type=\"submit\" mat-raised-button color=\"primary\"\n            [disabled]=\"loading\">Login</button>\n        </div>\n      </form>\n      \n  \n       \n      <br>\n  <br>    \n       \n        \n      <a mat-stroked-button color=\"primary\" class=\"primary\" routerLink=\"/auth/register\" >Register to become a Member</a>\n        <!-- <button color=\"primary\" class=\"full-width\" type=\"submit\" mat-raised-button color=\"primary\"\n        [disabled]=\"loading\">Login</button>\n     -->\n     <br>\n      \n      \n  \n  \n    </mat-card>\n  \n  \n  </div>\n  \n  \n  \n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SharedModule } from '../shared/sharedModule.module';\nimport { AuthService } from '../services/auth.service';\n\n\n@NgModule({\n  declarations: [ LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    CommonModule,\n    SharedModule,\n    AuthRoutingModule,\n    \n  ],\n  providers: [\n    AuthService,\n    \n  ]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/sharedModule.module';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { HomeComponent } from './components/homeComponent';\nimport { AlertComponent } from './components/alertComponent';\nimport { NavbarComponent } from './components/navbarComponent/navbar.component';\nimport { SpinnerComponent } from './shared/spinner.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor, JwtInterceptor } from './helpers';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AlertComponent,\n    NavbarComponent,\n    SpinnerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    HttpClientModule,\n    AuthModule,\n    UsersModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormGroupDirective, FormControl, NgForm } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AlertService,  } from '../../services/alert.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MustMatch } from 'src/app/helpers';\n\n\n\n\n\n\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n      const isSubmitted = form && form.submitted;\n      return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n    }\n  }\n\n\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html',\nstyleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n    loading = false;\n    submitted = false;\n    hide= false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private authenticationService: AuthService,\n        private alertService: AlertService\n    ) {\n        // redirect to home if already logged in\n        // tslint:disable-next-line:no-trailing-whitespace\n        if (this.authenticationService.currentUserValue) { \n            this.router.navigate(['/']);\n            this.alertService.error('you are already a logged In', true);\n                   \n        }\n    }\n   \n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            fullname: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\n            \n            email: ['',[Validators.required,Validators.email] ],\n            \n            password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(24)]],\n            verifyPassword:['',[Validators.required]]\n        \n        },{validator:MustMatch('password', 'verifyPassword')}\n        );\n    \n    \n    }\n    \n    get fullname() { return this.registerForm.get('fullname'); }\n    get email() { return this.registerForm.get('email'); }\n    get password() { return this.registerForm.get('password'); }\n    get verifyPassword() { return this.registerForm.get('verifyPassword'); }\n\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n\n        console.log(this.registerForm.value)\n       \n        this.authenticationService.register(this.fullname.value, this.email.value, this.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.loading = false;\n                    \n                    this.alertService.success(`wellcome ! ${data.user.fullname}`, true);\n                    setTimeout(()=>{\n                        this.alertService.clear();            \n                        \n                      },3000);\n                    this.router.navigate(['']);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                    setTimeout(()=>{\n                        this.alertService.clear();            \n                        \n                      },15000);\n                });\n    }\n  \n\n    \n\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    // error = '';\n    hide= false;\n    get email() { return this.loginForm.get('email'); }\n    get password() { return this.loginForm.get('password'); }\n\n\n  constructor(private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthService,\n    private alertService: AlertService,\n    ) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n  });\n\n\n  // reset login status\n  this.authenticationService.logout();\n\n  // get return url from route parameters or default to '/'\n  this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    //console.log(this.email.value, this.password.value);\n    this.authenticationService.login(this.email.value, this.password.value)\n        .pipe(first())\n        .subscribe(\n            data => {\n                this.alertService.success(  ` Wellcome back ${data.user.fullname} `);\n                this.router.navigate([this.returnUrl]); \n                \n                setTimeout(()=>{\n                    this.alertService.clear();            \n                    \n                  },3000);\n               \n            },\n            error => {\n                this.alertService.error(error);\n                this.loading = false;\n                setTimeout(()=>{\n                    this.alertService.clear();            \n                    \n                  },3000);\n            });\n}\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\n\r\n// export class JwtInterceptor implements HttpInterceptor {\r\n//     constructor(private authenticationService: AuthenticationService) { }\r\n\r\n//     intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n//         // add authorization header with jwt token if available\r\n//         const currentUserToken = this.authenticationService.getToken;\r\n//         if (currentUserToken) {\r\n//             request = request.clone({\r\n//                 setHeaders: {\r\n//                     Authorization: `Bearer ${currentUserToken}`\r\n//                 }\r\n//             });\r\n//         }\r\n\r\n//         return next.handle(request);\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUserToken = this.authenticationService.getToken;\r\n        // if (currentUserToken) {\r\n        //     request = request.clone({\r\n        //         setHeaders: {\r\n        //             Authorization: `Bearer ${currentUserToken}`\r\n        //         }\r\n        //     });\r\n        const clonedRequest = request.clone({\r\n\t\t\theaders: request\r\n\t\t\t\t.headers\r\n\t\t\t\t.set('Authorization', currentUserToken ? `Bearer ${ currentUserToken}` : '')\r\n\t\t});\r\n\r\n\r\n        // }\r\n\r\n        return next.handle(clonedRequest);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }));\r\n    }\r\n}\r\n","<mat-toolbar  color=\"primary\">\r\n  \r\n     <a mat-button text-center routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n        <mat-icon class=\"example-icon\">home</mat-icon>&nbsp;{{title}}\r\n      </a>\r\n        \r\n    <span class=\"example-fill-remaining-space\"></span>\r\n    \r\n    <div *ngIf=\"currentUser\">\r\n        <button  mat-raised-button color ='accent'[matMenuTriggerFor]=\"menu\">{{currentUser.fullname}}\r\n            <i class=\"material-icons\">\r\n                expand_more\r\n                </i></button>\r\n        <mat-menu  #menu=\"matMenu\">\r\n          \r\n        \r\n          <button mat-menu-item (click)=\"onProfile()\">Profile <i class=\"material-icons\">\r\naccount_circle\r\n</i></button>\r\n<button  mat-menu-item (click)=\"onLogout()\">Logout <i class=\"material-icons\">\r\n  settings_power\r\n  </i></button>\r\n<!--           \r\n          <button >\r\n           <a  routerLink=\"/auth/profile\" >Profile settings</a>\r\n         \r\n          </button>     \r\n           -->\r\n        </mat-menu>\r\n    \r\n      <!-- <button mat-stroked-button (click)=\"onLogout()\">Logout</button>\r\n        &nbsp;\r\n        <a mat-button  routerLink=\"/auth/profile\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">{{currentUser.fullname}}</a> -->\r\n      </div>\r\n    \r\n      <div *ngIf=\"!currentUser\">\r\n        <!-- <a  mat-button    routerLink=\"/auth/register\" \r\n        routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Register <i class=\"material-icons\">\r\n            add_circle_outline\r\n            </i></a>\r\n        &nbsp; -->\r\n        <a  mat-button   routerLink='/auth/login' routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Sign\r\n          in <i class=\"material-icons\">\r\n              lock_open\r\n              </i></a>\r\n      </div>\r\n    \r\n  </mat-toolbar>\r\n","<p>users works!</p>\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { User } from '../interfaces/user';\nimport { catchError, map } from 'rxjs/operators';\nimport { AlertService } from '../services/alert.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n   // public isloggedIn:boolean=false;\n   apiUrl: String = 'https://localhost:3000/v1';\n\n   private currentUserSubject: BehaviorSubject<User>;\n   public currentUser: Observable<User>;\n\n\n\n   \n   constructor(private alertService: AlertService,private http: HttpClient) {\n       \n       // this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n      \n       this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n       \n       this.currentUser = this.currentUserSubject.asObservable();\n   }\n\n   public get currentUserValue(): User {\n       return this.currentUserSubject.value;\n   }\n   public get getToken(): string {\n       return localStorage.getItem('currentUserToken');\n     }\n\n\n   register(fullname:string,email: string, password: string){\n   \n       return this.http.post<any>(`${this.apiUrl}/auth/register`, { fullname,email, password })\n           .pipe(map(data => {\n\n               console.log(data);\n               // login successful if there's a jwt token in the response http://localhost:3000\n               if (data && data.token) {\n                   localStorage.removeItem('currentUser');\n                   localStorage.removeItem('currentUserToken');\n               \n                   localStorage.removeItem('timer');\n                   // store user details and jwt token in local storage to keep user logged in between page refreshes\n                  \n                   localStorage.setItem('currentUser', JSON.stringify(data.user));\n                   localStorage.setItem('currentUserToken', data.token);\n                   \n                   const time_to_login = Date.now() + 604800000; \n                   localStorage.setItem('timer', JSON.stringify(time_to_login));\n                   this.currentUserSubject.next(data.user);\n\n               }\n\n               return data;\n           }), catchError(this.handleError)\n           \n           );\n }\n\n\n\n\n \n\n  \n\n   \n   login(email: string, password: string) {\n       return this.http.post<any>(`${this.apiUrl}/auth/login`, { email, password })\n           .pipe(map(data => {\n               // login successful if there's a jwt token in the response http://localhost:3000\n               if (data && data.token) {\n                   // store user details and jwt token in local storage to keep user logged in between page refreshes\n                   localStorage.removeItem('currentUser');\n                   localStorage.removeItem('currentUserToken');\n               \n                   localStorage.removeItem('timer');\n                   \n                   \n                   localStorage.setItem('currentUser', JSON.stringify(data.user));\n                   localStorage.setItem('currentUserToken', data.token);\n                   \n                   const time_to_login = Date.now() + 604800000; \n                   localStorage.setItem('timer', JSON.stringify(time_to_login));\n                   this.currentUserSubject.next(data.user);\n                \n                   this.alertService.success(\" Successfully login\")\n               }\n\n               return data;\n           }));\n   }\n\n \n\n\n   \n   logout() {\n       // remove user from local storage to log user out\n       localStorage.removeItem('currentUser');\n       localStorage.removeItem('currentUserToken');\n      \n       localStorage.removeItem('timer');\n       this.currentUserSubject.next(null);\n  \n   }\n   private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n      this.alertService.error(`${error.error.message}`)\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    this.alertService.error(`Backend returned code ${error.status}, ` +\n    `body was: ${error.error}`)\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n\n}\n","     \r\n                <div class='title-center' *ngIf=\"message\"\r\n                  [ngClass]=\"{ 'alert': message, 'alert-success': message.type === 'success',\r\n                 'alert-danger': message.type === 'error' }\">\r\n                       {{message.text}}\r\n                 \r\n                       <button mat-button matSuffix mat-icon-button aria-label=\"Clear\"(click)=\"clearAlert()\">\r\n                        <mat-icon>close</mat-icon>\r\n                          </button>\r\n                        \r\n                 </div>\r\n             \r\n            \r\n      ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  Inject,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {\r\n  Router,\r\n  NavigationStart,\r\n  NavigationEnd,\r\n  NavigationCancel,\r\n  NavigationError\r\n} from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input()\r\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/homeComponent';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n\n  { path: 'users', loadChildren: () => import('./users/users.module').then(m => m.UsersModule)},\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\n\n  <app-navbar [title]='title' [currentUser]= 'currentUser'  ></app-navbar>\n  <br>\n  <alert></alert>\n  <br>\n \n  \n  <router-outlet><app-spinner></app-spinner></router-outlet>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\n\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [\n    CommonModule,\n    UsersRoutingModule\n  ]\n})\nexport class UsersModule { }\n"],"sourceRoot":"webpack:///"}